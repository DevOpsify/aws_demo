---
- name: Get the ubuntu trusty ami
  ec2_ami_search: distro=ubuntu release=trusty virt=hvm region={{ aws_region }}
  register: ubuntu_image

- name: Create Database Server
  ec2:
    key_name: "{{ key_pair }}"
    group: [ ssh, mysql, icmp ]
    instance_type: "{{ instance_type }}"
    image: "{{ ubuntu_image.ami }}"
    wait: yes
    wait_timeout: 2000
    instance_tags: { name: db, type: database, env: demo }
    vpc_subnet_id: "{{ vpc.subnets[1].id }}"
    assign_public_ip: yes
    region: "{{ aws_region }}"
    exact_count: 1
    count_tag: { type: database }
  register: ec2

- name: add to database groups
  add_host: 
    name: "{{ item.public_dns_name }}"
    groups: database
    ec2_id: "{{ item.id }}"
  with_items: ec2.instances

- name: Wait for instance to boot
  wait_for:
    host: "{{ item.public_dns_name }}"
    port: 22
    delay: 30
    timeout: 300
    state: started
  with_items: ec2.instances

- name: Create Web Server
  ec2:
    key_name: "{{ key_pair }}"
    group: [ ssh, http, https, icmp ]
    instance_type: "{{ instance_type }}"
    image: "{{ ubuntu_image.ami }}"
    wait: yes
    wait_timeout: 2000
    instance_tags: { name: www, type: web, env: demo }
    vpc_subnet_id: "{{ vpc.subnets[0].id }}"
    assign_public_ip: yes
    region: "{{ aws_region }}"
  register: ec2

- name: add to web groups
  add_host: 
    name: "{{ item.public_dns_name }}" 
    groups: web
    ec2_id: "{{ item.id }}"
  with_items: ec2.instances

- name: Wait for instance to boot
  wait_for:
    host: "{{ item.public_dns_name }}"
    port: 22
    delay: 30
    timeout: 300
    state: started
  with_items: ec2.instances
